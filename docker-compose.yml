services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      -  MYSQL_ROOT_PASSWORD=password
      -  MYSQL_DATABASE=chattingo_db
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  backend:
    image: snehasanam/chattingo-backend:latest
    container_name: chattingo-backend
    ports:
      - "8080:8080"
    depends_on:
       mysql:
         condition: service_healthy
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      CORS_ALLOWED_METHODS: ${CORS_ALLOWED_METHODS}
      CORS_ALLOWED_HEADERS: ${CORS_ALLOWED_HEADERS}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SERVER_PORT: ${SERVER_PORT}
      WEBSOCKET_ENDPOINT: ${WEBSOCKET_ENDPOINT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3


  frontend:
    image: snehasanam/chattingo-frontend:latest
    container_name: chattingo-frontend
    restart: always
    ports:
      - "3000:80"
    environment:
      - ./frontend/.env 
    depends_on:
      - backend
    networks:
      - chat-network
    

networks:
  chat-network:
    driver: bridge

volumes:
  mysql-data:
